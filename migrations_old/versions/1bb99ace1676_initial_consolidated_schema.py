"""Initial consolidated schema

Revision ID: 1bb99ace1676
Revises: 
Create Date: 2025-08-23 17:29:38.240023

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1bb99ace1676'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('businesses',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('contact', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('companies',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('business_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('contact_person', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('creditors',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('business_id', sa.String(length=36), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('contact_person', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('amount_owed', sa.Float(), nullable=False),
    sa.Column('date_incurred', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('synced_to_remote', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customers',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('business_id', sa.String(length=36), nullable=False),
    sa.Column('customer_name', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('debtors',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('business_id', sa.String(length=36), nullable=False),
    sa.Column('customer_name', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('amount_due', sa.Float(), nullable=False),
    sa.Column('date_incurred', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('synced_to_remote', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hirable_items',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('business_id', sa.String(length=36), nullable=False),
    sa.Column('item_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('rental_price_per_day', sa.Float(), nullable=False),
    sa.Column('current_stock', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('synced_to_remote', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory_items',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('business_id', sa.String(length=36), nullable=False),
    sa.Column('product_name', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('purchase_price', sa.Float(), nullable=False),
    sa.Column('sale_price', sa.Float(), nullable=False),
    sa.Column('current_stock', sa.Float(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('batch_number', sa.String(length=100), nullable=True),
    sa.Column('number_of_tabs', sa.Integer(), nullable=False),
    sa.Column('unit_price_per_tab', sa.Float(), nullable=False),
    sa.Column('item_type', sa.String(length=50), nullable=False),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('is_fixed_price', sa.Boolean(), nullable=False),
    sa.Column('fixed_sale_price', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('barcode', sa.String(length=100), nullable=True),
    sa.Column('markup_percentage_pharmacy', sa.Float(), nullable=False),
    sa.Column('synced_to_remote', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_name', 'business_id', name='_product_name_business_uc')
    )
    with op.batch_alter_table('inventory_items', schema=None) as batch_op:
        batch_op.create_index('idx_unique_active_barcode', ['barcode'], unique=True, postgresql_where=sa.text('barcode IS NOT NULL'))

    op.create_table('sales_records',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('business_id', sa.String(length=36), nullable=False),
    sa.Column('transaction_date', sa.DateTime(), nullable=False),
    sa.Column('customer_phone', sa.String(length=20), nullable=True),
    sa.Column('sales_person_name', sa.String(length=100), nullable=False),
    sa.Column('grand_total_amount', sa.Float(), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('items_sold_json', sa.Text(), nullable=False),
    sa.Column('is_synced', sa.Boolean(), nullable=False),
    sa.Column('receipt_number', sa.String(length=50), nullable=True),
    sa.Column('reference_number', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('receipt_number')
    )
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('business_id', sa.String(length=36), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username', 'business_id', name='_username_business_uc')
    )
    op.create_table('company_transactions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('business_id', sa.String(length=36), nullable=False),
    sa.Column('company_id', sa.String(length=36), nullable=False),
    sa.Column('transaction_type', sa.String(length=50), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('synced_to_remote', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('future_orders',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('business_id', sa.String(length=36), nullable=False),
    sa.Column('company_id', sa.String(length=36), nullable=True),
    sa.Column('customer_name', sa.String(length=255), nullable=False),
    sa.Column('customer_phone', sa.String(length=20), nullable=True),
    sa.Column('order_details', sa.Text(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('order_date', sa.Date(), nullable=False),
    sa.Column('pickup_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('synced_to_remote', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rental_records',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('business_id', sa.String(length=36), nullable=False),
    sa.Column('hirable_item_id', sa.String(length=36), nullable=False),
    sa.Column('item_name_at_rent', sa.String(length=255), nullable=False),
    sa.Column('customer_name', sa.String(length=255), nullable=False),
    sa.Column('customer_phone', sa.String(length=20), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('rental_price_per_day_at_rent', sa.Float(), nullable=False),
    sa.Column('rent_date', sa.Date(), nullable=False),
    sa.Column('return_date', sa.Date(), nullable=True),
    sa.Column('total_rental_amount', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('synced_to_remote', sa.Boolean(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['hirable_item_id'], ['hirable_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rental_records')
    op.drop_table('future_orders')
    op.drop_table('company_transactions')
    op.drop_table('users')
    op.drop_table('sales_records')
    with op.batch_alter_table('inventory_items', schema=None) as batch_op:
        batch_op.drop_index('idx_unique_active_barcode', postgresql_where=sa.text('barcode IS NOT NULL'))

    op.drop_table('inventory_items')
    op.drop_table('hirable_items')
    op.drop_table('debtors')
    op.drop_table('customers')
    op.drop_table('creditors')
    op.drop_table('companies')
    op.drop_table('businesses')
    # ### end Alembic commands ###
