from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c9c4183f9e34'
down_revision = None
branch_labels = None
depends_on = None

 # Removed: op.alter_column('sales_records', 'synced_to_remote', nullable=False)
def upgrade():
    # Use inspect to get columns and check for existence
    inspector = sa.inspect(op.get_bind())

    # Helper function to check for column existence
    def has_column(table_name, column_name):
        return any(c['name'] == column_name for c in inspector.get_columns(table_name))

    # companies table
    if not has_column('companies', 'synced_to_remote'):
        op.add_column('companies', sa.Column('synced_to_remote', sa.Boolean(), nullable=True, server_default=sa.text('false')))
    op.execute("UPDATE companies SET synced_to_remote = FALSE WHERE synced_to_remote IS NULL")
    
    # company_transactions table
    if not has_column('company_transactions', 'synced_to_remote'):
        op.add_column('company_transactions', sa.Column('synced_to_remote', sa.Boolean(), nullable=True, server_default=sa.text('false')))
    op.execute("UPDATE company_transactions SET synced_to_remote = FALSE WHERE synced_to_remote IS NULL")

    # creditors table
    if not has_column('creditors', 'synced_to_remote'):
        op.add_column('creditors', sa.Column('synced_to_remote', sa.Boolean(), nullable=True, server_default=sa.text('false')))
    op.execute("UPDATE creditors SET synced_to_remote = FALSE WHERE synced_to_remote IS NULL")
    
    # debtors table
    if not has_column('debtors', 'synced_to_remote'):
        op.add_column('debtors', sa.Column('synced_to_remote', sa.Boolean(), nullable=True, server_default=sa.text('false')))
    op.execute("UPDATE debtors SET synced_to_remote = FALSE WHERE synced_to_remote IS NULL")

    # future_orders table
    if not has_column('future_orders', 'synced_to_remote'):
        op.add_column('future_orders', sa.Column('synced_to_remote', sa.Boolean(), nullable=True, server_default=sa.text('false')))
    op.execute("UPDATE future_orders SET synced_to_remote = FALSE WHERE synced_to_remote IS NULL")

    # hirable_items table
    if not has_column('hirable_items', 'synced_to_remote'):
        op.add_column('hirable_items', sa.Column('synced_to_remote', sa.Boolean(), nullable=True, server_default=sa.text('false')))
    op.execute("UPDATE hirable_items SET synced_to_remote = FALSE WHERE synced_to_remote IS NULL")

    # inventory_items table
    if not has_column('inventory_items', 'synced_to_remote'):
        op.add_column('inventory_items', sa.Column('synced_to_remote', sa.Boolean(), nullable=True, server_default=sa.text('false')))
    op.execute("UPDATE inventory_items SET synced_to_remote = FALSE WHERE synced_to_remote IS NULL")

    # rental_records table
    if not has_column('rental_records', 'synced_to_remote'):
        op.add_column('rental_records', sa.Column('synced_to_remote', sa.Boolean(), nullable=True, server_default=sa.text('false')))
    op.execute("UPDATE rental_records SET synced_to_remote = FALSE WHERE synced_to_remote IS NULL")
    
    # sales_records table
    if not has_column('sales_records', 'synced_to_remote'):
        op.add_column('sales_records', sa.Column('synced_to_remote', sa.Boolean(), nullable=True, server_default=sa.text('false')))
    op.execute("UPDATE sales_records SET synced_to_remote = FALSE WHERE synced_to_remote IS NULL")
def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Dropping columns in the reverse order
    op.drop_column('sales_records', 'synced_to_remote')
    op.drop_column('rental_records', 'synced_to_remote')
    op.drop_column('inventory_items', 'synced_to_remote')
    op.drop_column('hirable_items', 'synced_to_remote')
    op.drop_column('future_orders', 'synced_to_remote')
    op.drop_column('debtors', 'synced_to_remote')
    op.drop_column('creditors', 'synced_to_remote')
    op.drop_column('company_transactions', 'synced_to_remote')
    op.drop_column('companies', 'synced_to_remote')
    # ### end Alembic commands ###