"""Add is_active column to User model

Revision ID: b8f0cf3bd73d
Revises: 0ec82a005449
Create Date: 2025-08-13 07:06:41.082133

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b8f0cf3bd73d'
down_revision = '0ec82a005449'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        # 1. Add the column, but temporarily allow it to be nullable.
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))

    # 2. Update existing rows to set a default value (True) for the new 'is_active' column.
    #    This is crucial to avoid the NotNullViolation for existing user data.
    op.execute('UPDATE users SET is_active = TRUE WHERE is_active IS NULL')

    with op.batch_alter_table('users', schema=None) as batch_op:
        # 3. Now, alter the column to be NOT NULL and set a server default for future new rows.
        batch_op.alter_column('is_active',
                           existing_type=sa.Boolean(),
                           nullable=False,
                           existing_nullable=True, # Important: tells Alembic it was previously nullable
                           server_default=sa.true()) # This sets the default at the DB level

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        # When downgrading, remove the NOT NULL constraint first if it was added in upgrade,
        # then drop the column.
        batch_op.alter_column('is_active',
                               existing_type=sa.Boolean(),
                               nullable=True, # Allow nulls again before dropping
                               existing_nullable=False,
                               server_default=None) # Remove the server default

        batch_op.drop_column('is_active')
    # ### end Alembic commands ###