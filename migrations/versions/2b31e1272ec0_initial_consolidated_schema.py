"""Initial consolidated schema

Revision ID: 2b31e1272ec0
Revises: 
Create Date: 2025-08-22 01:09:14.262714

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2b31e1272ec0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('businesses', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('address',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
        batch_op.drop_column('last_updated')

    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.alter_column('address',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.drop_column('balance')

    with op.batch_alter_table('company_transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.drop_column('date')
        batch_op.drop_column('type')
        batch_op.drop_column('description')
        batch_op.drop_column('recorded_by')

    with op.batch_alter_table('creditors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('contact_person', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('phone_number', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('email', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('due_date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('ix_creditors_business_id'))
        batch_op.drop_index(batch_op.f('ix_creditors_company_id'))
        batch_op.drop_constraint(batch_op.f('creditors_company_id_fkey'), type_='foreignkey')
        batch_op.drop_column('last_updated')
        batch_op.drop_column('company_id')

    with op.batch_alter_table('debtors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('phone_number', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('email', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('due_date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('ix_debtors_business_id'))
        batch_op.drop_index(batch_op.f('ix_debtors_company_id'))
        batch_op.drop_constraint(batch_op.f('debtors_company_id_fkey'), type_='foreignkey')
        batch_op.drop_column('last_updated')
        batch_op.drop_column('company_id')

    with op.batch_alter_table('future_orders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('company_id', sa.String(length=36), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.alter_column('customer_phone',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'])
        batch_op.drop_column('expected_collection_date')
        batch_op.drop_column('actual_collection_date')
        batch_op.drop_column('date_ordered')
        batch_op.drop_column('remaining_balance')
        batch_op.drop_column('items_json')

    with op.batch_alter_table('hirable_items', schema=None) as batch_op:
        batch_op.alter_column('last_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_column('daily_hire_price')

    with op.batch_alter_table('inventory_items', schema=None) as batch_op:
        batch_op.alter_column('last_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('barcode',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('markup_percentage_pharmacy',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=False)

    with op.batch_alter_table('rental_records', schema=None) as batch_op:
        batch_op.add_column(sa.Column('return_date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.alter_column('customer_phone',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.drop_column('number_of_days')
        batch_op.drop_column('total_hire_amount')
        batch_op.drop_column('date_recorded')
        batch_op.drop_column('daily_hire_price_at_rent')
        batch_op.drop_column('end_date')
        batch_op.drop_column('actual_return_date')
        batch_op.drop_column('sales_person_name')
        batch_op.drop_column('start_date')

    with op.batch_alter_table('sales_records', schema=None) as batch_op:
        batch_op.alter_column('transaction_date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=False)
        batch_op.alter_column('customer_phone',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.alter_column('payment_method',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('receipt_number',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['receipt_number'])
        batch_op.drop_constraint(batch_op.f('sales_records_product_id_fkey'), type_='foreignkey')
        batch_op.drop_column('transaction_id')
        batch_op.drop_column('synced_to_remote')
        batch_op.drop_column('total_amount')
        batch_op.drop_column('product_id')
        batch_op.drop_column('product_name')
        batch_op.drop_column('quantity_sold')
        batch_op.drop_column('sale_unit_type')
        batch_op.drop_column('sale_date')
        batch_op.drop_column('price_at_time_per_unit_sold')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sales_records', schema=None) as batch_op:
        batch_op.add_column(sa.Column('price_at_time_per_unit_sold', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('sale_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('sale_unit_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('quantity_sold', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('product_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('product_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('total_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('synced_to_remote', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('transaction_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False))
        batch_op.create_foreign_key(batch_op.f('sales_records_product_id_fkey'), 'inventory_items', ['product_id'], ['id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('receipt_number',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('payment_method',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('customer_phone',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('transaction_date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=False)

    with op.batch_alter_table('rental_records', schema=None) as batch_op:
        batch_op.add_column(sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('sales_person_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('actual_return_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('daily_hire_price_at_rent', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('date_recorded', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('total_hire_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('number_of_days', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.alter_column('customer_phone',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.drop_column('notes')
        batch_op.drop_column('return_date')

    with op.batch_alter_table('inventory_items', schema=None) as batch_op:
        batch_op.alter_column('markup_percentage_pharmacy',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
        batch_op.alter_column('barcode',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('last_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

    with op.batch_alter_table('hirable_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('daily_hire_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.alter_column('last_updated',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

    with op.batch_alter_table('future_orders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('items_json', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('remaining_balance', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('date_ordered', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('actual_collection_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('expected_collection_date', sa.DATE(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('customer_phone',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.drop_column('notes')
        batch_op.drop_column('company_id')

    with op.batch_alter_table('debtors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('company_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('debtors_company_id_fkey'), 'companies', ['company_id'], ['id'])
        batch_op.create_index(batch_op.f('ix_debtors_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_debtors_business_id'), ['business_id'], unique=False)
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('notes')
        batch_op.drop_column('due_date')
        batch_op.drop_column('email')
        batch_op.drop_column('phone_number')

    with op.batch_alter_table('creditors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('company_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('creditors_company_id_fkey'), 'companies', ['company_id'], ['id'])
        batch_op.create_index(batch_op.f('ix_creditors_company_id'), ['company_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_creditors_business_id'), ['business_id'], unique=False)
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('notes')
        batch_op.drop_column('due_date')
        batch_op.drop_column('email')
        batch_op.drop_column('phone_number')
        batch_op.drop_column('contact_person')

    with op.batch_alter_table('company_transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('recorded_by', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.drop_column('notes')

    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.add_column(sa.Column('balance', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('address',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)

    with op.batch_alter_table('businesses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('address',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)

    # ### end Alembic commands ###
